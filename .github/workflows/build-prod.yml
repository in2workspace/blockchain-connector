name: "Build (Prod Environment)"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: test

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      - name: Set build status and create deployment
        run: |
          const status = process.env.BUILD_STATUS;
          core.setOutput('build_status', status);

          if (status !== 'success') {
            if (github && context.repo) {
              const { data } = await github.repos.createDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: process.env.GITHUB_SHA,
                environment: 'test',
                auto_merge: false,
              });

              await github.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: data.id,
                state: 'failure',
              });
            } else {
              console.error('Error: github or context.repo is undefined.');
            }
          }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
